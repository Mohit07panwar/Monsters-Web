{"version":3,"sources":["components/card/card.components.jsx","components/card-list/card-list.components.jsx","components/search/search.components.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","Monsters","id","alt","name","email","CardList","map","SearchBox","placeholder","handleChange","type","onChange","App","state","searchField","fetch","then","response","json","user","setState","this","filterMonsters","filter","el","includes","e","target","value","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iUAEaA,EAAO,SAACC,GACjB,OACI,sBAAKC,UAAU,MAAf,UACG,qBAAKC,IAAG,+BAA0BF,EAAMG,SAASC,GAAzC,0BAAqEC,IAAI,aAChF,6BAAKL,EAAMG,SAASG,OACpB,4BAAIN,EAAMG,SAASI,YCHlBC,EAAW,SAACR,GACrB,OACI,qBAAKC,UAAU,YAAf,SACKD,EAAMG,SAASM,KAAI,SAAAN,GAAQ,OACxB,cAAC,EAAD,CAAMA,SAAUA,UCLnBO,G,MAAW,SAAC,GAA8B,IAA7BC,EAA4B,EAA5BA,YAAYC,EAAgB,EAAhBA,aACtC,OACI,uBAAOX,UAAU,SAASY,KAAK,SAASF,YAAaA,EAAaG,SAAUF,MCmCjEG,E,kDAlCb,aAAe,IAAD,8BACZ,gBAEKC,MAAQ,CACXb,SAAU,GACVc,YAAa,IALH,E,qDAQd,WAAqB,IAAD,OAClBC,MAAM,8CACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAI,OAAI,EAAKC,SAAS,CAAEpB,SAAUmB,S,oBAG5C,WAAU,IAAD,OACP,EAAkCE,KAAKR,MAA/Bb,EAAR,EAAQA,SAAUc,EAAlB,EAAkBA,YACZQ,EAAiBtB,EAASuB,QAAO,SAAAC,GAAE,OACvCA,EAAGrB,KAAKsB,SAASX,MAGnB,OACE,sBAAKhB,UAAU,MAAf,UACE,kDACA,cAAC,EAAD,CACEU,YAAY,iBACZC,aAAc,SAACiB,GAAD,OAAO,EAAKN,SAAS,CAAEN,YAAaY,EAAEC,OAAOC,WAE7D,cAAC,EAAD,CAAU5B,SAAUsB,W,GA5BVO,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.28f18bc0.chunk.js","sourcesContent":["import React from 'react'\r\nimport  './card.style.css'\r\nexport const Card = (props) => {\r\n    return (\r\n        <div className=\"css\">\r\n           <img src={`https://robohash.org/${props.Monsters.id}?set=set2&size=180x180`} alt=\"Monsters\"/>\r\n            <h1>{props.Monsters.name}</h1>\r\n            <p>{props.Monsters.email}</p>\r\n        </div>\r\n    )\r\n\r\n}","import React from 'react'\r\nimport './card-list.style.css'\r\nimport { Card } from '../card/card.components.jsx'\r\n\r\nexport const CardList = (props) => {\r\n    return (\r\n        <div className=\"card-list\">\r\n            {props.Monsters.map(Monsters =>\r\n                <Card Monsters={Monsters} />)}\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React from 'react';\r\nimport './search.style.css';\r\n\r\nexport const SearchBox= ({placeholder,handleChange})=>{\r\nreturn(\r\n    <input className=\"search\" type=\"search\" placeholder={placeholder} onChange={handleChange}/>\r\n)\r\n}","import './App.css';\nimport { Component } from 'react';\nimport { CardList } from './components/card-list/card-list.components.jsx';\nimport { SearchBox } from './components/search/search.components.jsx';\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      Monsters: [],\n      searchField: ''\n    }\n  }\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then(response => response.json())\n      .then(user => this.setState({ Monsters: user }))\n  }\n\n  render() {\n    const { Monsters, searchField } = this.state;\n    const filterMonsters = Monsters.filter(el =>\n      el.name.includes(searchField)\n    )\n\n    return (\n      <div className=\"App\">\n        <h1>Monsters Rolodex</h1>\n        <SearchBox\n          placeholder=\"search Monster\"\n          handleChange={(e) => this.setState({ searchField: e.target.value })} />\n\n        <CardList Monsters={filterMonsters} />\n\n      </div>\n    )\n  }\n}\n\nexport default App;\n\n\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}